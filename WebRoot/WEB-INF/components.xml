<components xmlns="http://jboss.com/products/seam/components"
	xmlns:core="http://jboss.com/products/seam/core"
	xmlns:drools="http://jboss.com/products/seam/drools"
	xmlns:bpm="http://jboss.com/products/seam/bpm"
	xmlns:bpm4="http://jboss.com/products/seam/bpm4"
	xmlns:persistence="http://jboss.com/products/seam/persistence"
	xmlns:transaction="http://jboss.com/products/seam/transaction"
	xmlns:security="http://jboss.com/products/seam/security"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:web="http://jboss.com/products/seam/web"
	xmlns:databases="http://jboss.com/products/seam/databases"
	xsi:schemaLocation="http://jboss.com/products/seam/drools http://jboss.com/products/seam/drools-2.2.xsd 
                 http://jboss.com/products/seam/core http://jboss.com/products/seam/core-2.2.xsd 
                 http://jboss.com/products/seam/components http://jboss.com/products/seam/components-2.2.xsd 
                 http://jboss.com/products/seam/persistence http://jboss.com/products/seam/persistence-2.2.xsd 
                 http://jboss.com/products/seam/transaction http://jboss.com/products/seam/transaction-2.2.xsd 
                 http://jboss.com/products/seam/web http://jboss.com/products/seam/web-2.2.xsd
                 http://jboss.com/products/seam/security http://jboss.com/products/seam/security-2.2.xsd
                 http://jboss.com/products/seam/bpm http://jboss.com/products/seam/bpm-2.2.xsd
                 http://jboss.com/products/seam/spring  http://jboss.com/products/seam/spring-2.2.xsd
                 ">

	<core:manager conversation-timeout="120000"
		concurrent-request-timeout="500" conversation-id-parameter="cid" />

	<core:init debug="true" />

	<!--  
		<persistence:entity-manager-factory name="mainDataBase" />
	-->
	<persistence:managed-persistence-context name="em"
		auto-create="true"
		entity-manager-factory="#{SystemEntityManagerFactory}" />
	<factory name="hibernateSession" scope="stateless"
		auto-create="true" value="#{em.delegate}" />
	<!--  
	<persistence:managed-hibernate-session name="hibernateSession"
		auto-create="true" session-factory="#{sessionFactory}" />
	-->
	<transaction:entity-transaction entity-manager="#{em}" />

	<!-- <transaction:ejb-transaction /> -->

	<drools:rule-base name="ruleBase"
		rule-files="com/sunsheen/demo/pageflow/drools/numberguess.drl" />
	<!-- use this in order to load from decision table instead -->
	<!--  <drools:rule-base name="ruleBase" rule-files="com/sunsheen/demo/pageflow/numberguess.xls"/>-->
	<!--  use this in order to load from a drl and also add a ruleflow -->
	<!-- <drools:rule-base name="ruleBase" rule-files="numberguessforflow.drl, numberguess.rf"/>  -->
	<!--  use this in order to load from a xls and also add a ruleflow -->
	<!-- <drools:rule-base name="ruleBase" rule-files="numberguessforflow.xls, numberguess.rf"/> -->
	<!--  use this if you want to register a custom consequence exception handler -->
	<!--  <drools:rule-base name="ruleBase" rule-files="numberguess.xls" consequence-exception-handler="#{gameConsequenceExceptionHandler}"/>  -->
	<drools:managed-working-memory name="workingMemory"
		rule-base="#{ruleBase}">
		<!--  add WM event listeners -->
		<!-- <drools:event-listeners>
			<value>org.drools.event.DebugWorkingMemoryEventListener</value>
			<value>org.drools.event.DebugAgendaEventListener</value>
			</drools:event-listeners>  -->
	</drools:managed-working-memory>

	<bpm:jbpm>
		<bpm:pageflow-definitions>
			<!-- 
				<value>
				com/sunsheen/demo/pageflow/drools/pageflow.jpdl.xml
				</value>
				
				<value>
				com/sunsheen/demo/pageflow/guess/cheat.jpdl.xml
				</value>
				<value>
				com/sunsheen/demo/pageflow/guess/pageflow.jpdl.xml
				</value>
			-->
		</bpm:pageflow-definitions>
	</bpm:jbpm>


	<security:identity authenticate-method="#{systemLogin.login}" />

	<event type="org.jboss.seam.security.notLoggedIn">
		<action execute="#{redirect.captureCurrentView}" />
	</event>

	<event type="org.jboss.seam.security.loginSuccessful">
		<action execute="#{redirect.returnToCapturedView}" />
	</event>

	<web:context-filter
		regex-url-pattern="^/((?!seam/resource/remoting).)+\.(svt|js)(\?.*)*$" />
	<!-- <web:context-filter url-pattern="/data/*" regex-url-pattern="/JSON/*|/services/*|/servletName" /> -->
	<web:multipart-filter disabled="true" />
</components>
